// Generated from MiniJava.g4 by ANTLR 4.7.1
package sm222cf.grammar;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MiniJavaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, DIV=26, OR=27, GT=28, AND=29, LT=30, PLUS=31, MINUS=32, TIMES=33, 
		NOT=34, LSB=35, RSB=36, LP=37, RP=38, RETURN=39, EQ=40, BooleanLiteral=41, 
		SC=42, Identifier=43, WS=44, MULTILINE_COMMENT=45, LINE_COMMENT=46, STRING=47, 
		CHAR=48, IntegerLiteral=49;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"DIV", "OR", "GT", "AND", "LT", "PLUS", "MINUS", "TIMES", "NOT", "LSB", 
		"RSB", "LP", "RP", "RETURN", "EQ", "BooleanLiteral", "SC", "Identifier", 
		"WS", "MULTILINE_COMMENT", "LINE_COMMENT", "STRING", "CHAR", "IntegerLiteral", 
		"JavaLetter", "JavaLetterOrDigit", "DecimalIntegerLiteral", "IntegertypeSuffix", 
		"DecimalNumeral", "Digits", "Digit", "NonZeroDigit", "DigitsAndUnderscores", 
		"DigitOrUnderscore", "Underscores", "HEX_DIGIT", "ESC_SEQ", "OCTAL_ESC", 
		"UNICODE_ESC"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'class'", "'{'", "'}'", "'public'", "'static'", "'void'", "'main'", 
		"'String'", "'...'", "','", "'int'", "'boolean'", "'char'", "'do'", "'while'", 
		"'break'", "'continue'", "'System.out.println'", "'if'", "'else'", "'.length'", 
		"'.charAt'", "'.'", "'new'", "'this'", "'/'", "'||'", "'>'", "'&&'", "'<'", 
		"'+'", "'-'", "'*'", "'!'", "'['", "']'", "'('", "')'", "'return'", "'='", 
		null, "';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "DIV", "OR", "GT", "AND", "LT", "PLUS", "MINUS", "TIMES", 
		"NOT", "LSB", "RSB", "LP", "RP", "RETURN", "EQ", "BooleanLiteral", "SC", 
		"Identifier", "WS", "MULTILINE_COMMENT", "LINE_COMMENT", "STRING", "CHAR", 
		"IntegerLiteral"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MiniJavaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MiniJava.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\63\u01ca\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t"+
		"=\4>\t>\4?\t?\4@\t@\4A\tA\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5"+
		"\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3"+
		"\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\13"+
		"\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3"+
		"\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3"+
		"\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3"+
		"\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3"+
		"\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3"+
		"\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3"+
		"\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3"+
		"\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3"+
		"$\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3)\3)\3*\3*\3*\3*\3*\3*\3*"+
		"\3*\3*\5*\u0140\n*\3+\3+\3,\3,\7,\u0146\n,\f,\16,\u0149\13,\3-\6-\u014c"+
		"\n-\r-\16-\u014d\3-\3-\3.\3.\3.\3.\7.\u0156\n.\f.\16.\u0159\13.\3.\3."+
		"\3.\3.\3.\3/\3/\3/\3/\7/\u0164\n/\f/\16/\u0167\13/\3/\3/\3/\3/\3\60\3"+
		"\60\3\60\7\60\u0170\n\60\f\60\16\60\u0173\13\60\3\60\3\60\3\61\3\61\3"+
		"\61\5\61\u017a\n\61\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65"+
		"\5\65\u0186\n\65\3\66\3\66\3\67\3\67\3\67\5\67\u018d\n\67\3\67\3\67\3"+
		"\67\5\67\u0192\n\67\5\67\u0194\n\67\38\38\58\u0198\n8\38\58\u019b\n8\3"+
		"9\39\59\u019f\n9\3:\3:\3;\6;\u01a4\n;\r;\16;\u01a5\3<\3<\5<\u01aa\n<\3"+
		"=\6=\u01ad\n=\r=\16=\u01ae\3>\3>\3?\3?\3?\3?\5?\u01b7\n?\3@\3@\3@\3@\3"+
		"@\3@\3@\3@\3@\5@\u01c2\n@\3A\3A\3A\3A\3A\3A\3A\4\u0157\u0165\2B\3\3\5"+
		"\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21"+
		"!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!"+
		"A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\2g\2i\2k\2m\2o\2q\2s\2"+
		"u\2w\2y\2{\2}\2\177\2\u0081\2\3\2\13\5\2\13\f\17\17\"\"\4\2$$^^\4\2))"+
		"^^\6\2&&C\\aac|\7\2&&\62;C\\aac|\4\2NNnn\3\2\63;\5\2\62;CHch\n\2$$))^"+
		"^ddhhppttvv\2\u01d0\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2"+
		"\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3"+
		"\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2"+
		"\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2"+
		"\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2"+
		"\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2"+
		"\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q"+
		"\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2"+
		"\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\3\u0083\3\2\2\2\5\u0089\3\2\2\2"+
		"\7\u008b\3\2\2\2\t\u008d\3\2\2\2\13\u0094\3\2\2\2\r\u009b\3\2\2\2\17\u00a0"+
		"\3\2\2\2\21\u00a5\3\2\2\2\23\u00ac\3\2\2\2\25\u00b0\3\2\2\2\27\u00b2\3"+
		"\2\2\2\31\u00b6\3\2\2\2\33\u00be\3\2\2\2\35\u00c3\3\2\2\2\37\u00c6\3\2"+
		"\2\2!\u00cc\3\2\2\2#\u00d2\3\2\2\2%\u00db\3\2\2\2\'\u00ee\3\2\2\2)\u00f1"+
		"\3\2\2\2+\u00f6\3\2\2\2-\u00fe\3\2\2\2/\u0106\3\2\2\2\61\u0108\3\2\2\2"+
		"\63\u010c\3\2\2\2\65\u0111\3\2\2\2\67\u0113\3\2\2\29\u0116\3\2\2\2;\u0118"+
		"\3\2\2\2=\u011b\3\2\2\2?\u011d\3\2\2\2A\u011f\3\2\2\2C\u0121\3\2\2\2E"+
		"\u0123\3\2\2\2G\u0125\3\2\2\2I\u0127\3\2\2\2K\u0129\3\2\2\2M\u012b\3\2"+
		"\2\2O\u012d\3\2\2\2Q\u0134\3\2\2\2S\u013f\3\2\2\2U\u0141\3\2\2\2W\u0143"+
		"\3\2\2\2Y\u014b\3\2\2\2[\u0151\3\2\2\2]\u015f\3\2\2\2_\u016c\3\2\2\2a"+
		"\u0176\3\2\2\2c\u017d\3\2\2\2e\u017f\3\2\2\2g\u0181\3\2\2\2i\u0183\3\2"+
		"\2\2k\u0187\3\2\2\2m\u0193\3\2\2\2o\u0195\3\2\2\2q\u019e\3\2\2\2s\u01a0"+
		"\3\2\2\2u\u01a3\3\2\2\2w\u01a9\3\2\2\2y\u01ac\3\2\2\2{\u01b0\3\2\2\2}"+
		"\u01b6\3\2\2\2\177\u01c1\3\2\2\2\u0081\u01c3\3\2\2\2\u0083\u0084\7e\2"+
		"\2\u0084\u0085\7n\2\2\u0085\u0086\7c\2\2\u0086\u0087\7u\2\2\u0087\u0088"+
		"\7u\2\2\u0088\4\3\2\2\2\u0089\u008a\7}\2\2\u008a\6\3\2\2\2\u008b\u008c"+
		"\7\177\2\2\u008c\b\3\2\2\2\u008d\u008e\7r\2\2\u008e\u008f\7w\2\2\u008f"+
		"\u0090\7d\2\2\u0090\u0091\7n\2\2\u0091\u0092\7k\2\2\u0092\u0093\7e\2\2"+
		"\u0093\n\3\2\2\2\u0094\u0095\7u\2\2\u0095\u0096\7v\2\2\u0096\u0097\7c"+
		"\2\2\u0097\u0098\7v\2\2\u0098\u0099\7k\2\2\u0099\u009a\7e\2\2\u009a\f"+
		"\3\2\2\2\u009b\u009c\7x\2\2\u009c\u009d\7q\2\2\u009d\u009e\7k\2\2\u009e"+
		"\u009f\7f\2\2\u009f\16\3\2\2\2\u00a0\u00a1\7o\2\2\u00a1\u00a2\7c\2\2\u00a2"+
		"\u00a3\7k\2\2\u00a3\u00a4\7p\2\2\u00a4\20\3\2\2\2\u00a5\u00a6\7U\2\2\u00a6"+
		"\u00a7\7v\2\2\u00a7\u00a8\7t\2\2\u00a8\u00a9\7k\2\2\u00a9\u00aa\7p\2\2"+
		"\u00aa\u00ab\7i\2\2\u00ab\22\3\2\2\2\u00ac\u00ad\7\60\2\2\u00ad\u00ae"+
		"\7\60\2\2\u00ae\u00af\7\60\2\2\u00af\24\3\2\2\2\u00b0\u00b1\7.\2\2\u00b1"+
		"\26\3\2\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7p\2\2\u00b4\u00b5\7v\2\2\u00b5"+
		"\30\3\2\2\2\u00b6\u00b7\7d\2\2\u00b7\u00b8\7q\2\2\u00b8\u00b9\7q\2\2\u00b9"+
		"\u00ba\7n\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7c\2\2\u00bc\u00bd\7p\2\2"+
		"\u00bd\32\3\2\2\2\u00be\u00bf\7e\2\2\u00bf\u00c0\7j\2\2\u00c0\u00c1\7"+
		"c\2\2\u00c1\u00c2\7t\2\2\u00c2\34\3\2\2\2\u00c3\u00c4\7f\2\2\u00c4\u00c5"+
		"\7q\2\2\u00c5\36\3\2\2\2\u00c6\u00c7\7y\2\2\u00c7\u00c8\7j\2\2\u00c8\u00c9"+
		"\7k\2\2\u00c9\u00ca\7n\2\2\u00ca\u00cb\7g\2\2\u00cb \3\2\2\2\u00cc\u00cd"+
		"\7d\2\2\u00cd\u00ce\7t\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7c\2\2\u00d0"+
		"\u00d1\7m\2\2\u00d1\"\3\2\2\2\u00d2\u00d3\7e\2\2\u00d3\u00d4\7q\2\2\u00d4"+
		"\u00d5\7p\2\2\u00d5\u00d6\7v\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7p\2\2"+
		"\u00d8\u00d9\7w\2\2\u00d9\u00da\7g\2\2\u00da$\3\2\2\2\u00db\u00dc\7U\2"+
		"\2\u00dc\u00dd\7{\2\2\u00dd\u00de\7u\2\2\u00de\u00df\7v\2\2\u00df\u00e0"+
		"\7g\2\2\u00e0\u00e1\7o\2\2\u00e1\u00e2\7\60\2\2\u00e2\u00e3\7q\2\2\u00e3"+
		"\u00e4\7w\2\2\u00e4\u00e5\7v\2\2\u00e5\u00e6\7\60\2\2\u00e6\u00e7\7r\2"+
		"\2\u00e7\u00e8\7t\2\2\u00e8\u00e9\7k\2\2\u00e9\u00ea\7p\2\2\u00ea\u00eb"+
		"\7v\2\2\u00eb\u00ec\7n\2\2\u00ec\u00ed\7p\2\2\u00ed&\3\2\2\2\u00ee\u00ef"+
		"\7k\2\2\u00ef\u00f0\7h\2\2\u00f0(\3\2\2\2\u00f1\u00f2\7g\2\2\u00f2\u00f3"+
		"\7n\2\2\u00f3\u00f4\7u\2\2\u00f4\u00f5\7g\2\2\u00f5*\3\2\2\2\u00f6\u00f7"+
		"\7\60\2\2\u00f7\u00f8\7n\2\2\u00f8\u00f9\7g\2\2\u00f9\u00fa\7p\2\2\u00fa"+
		"\u00fb\7i\2\2\u00fb\u00fc\7v\2\2\u00fc\u00fd\7j\2\2\u00fd,\3\2\2\2\u00fe"+
		"\u00ff\7\60\2\2\u00ff\u0100\7e\2\2\u0100\u0101\7j\2\2\u0101\u0102\7c\2"+
		"\2\u0102\u0103\7t\2\2\u0103\u0104\7C\2\2\u0104\u0105\7v\2\2\u0105.\3\2"+
		"\2\2\u0106\u0107\7\60\2\2\u0107\60\3\2\2\2\u0108\u0109\7p\2\2\u0109\u010a"+
		"\7g\2\2\u010a\u010b\7y\2\2\u010b\62\3\2\2\2\u010c\u010d\7v\2\2\u010d\u010e"+
		"\7j\2\2\u010e\u010f\7k\2\2\u010f\u0110\7u\2\2\u0110\64\3\2\2\2\u0111\u0112"+
		"\7\61\2\2\u0112\66\3\2\2\2\u0113\u0114\7~\2\2\u0114\u0115\7~\2\2\u0115"+
		"8\3\2\2\2\u0116\u0117\7@\2\2\u0117:\3\2\2\2\u0118\u0119\7(\2\2\u0119\u011a"+
		"\7(\2\2\u011a<\3\2\2\2\u011b\u011c\7>\2\2\u011c>\3\2\2\2\u011d\u011e\7"+
		"-\2\2\u011e@\3\2\2\2\u011f\u0120\7/\2\2\u0120B\3\2\2\2\u0121\u0122\7,"+
		"\2\2\u0122D\3\2\2\2\u0123\u0124\7#\2\2\u0124F\3\2\2\2\u0125\u0126\7]\2"+
		"\2\u0126H\3\2\2\2\u0127\u0128\7_\2\2\u0128J\3\2\2\2\u0129\u012a\7*\2\2"+
		"\u012aL\3\2\2\2\u012b\u012c\7+\2\2\u012cN\3\2\2\2\u012d\u012e\7t\2\2\u012e"+
		"\u012f\7g\2\2\u012f\u0130\7v\2\2\u0130\u0131\7w\2\2\u0131\u0132\7t\2\2"+
		"\u0132\u0133\7p\2\2\u0133P\3\2\2\2\u0134\u0135\7?\2\2\u0135R\3\2\2\2\u0136"+
		"\u0137\7v\2\2\u0137\u0138\7t\2\2\u0138\u0139\7w\2\2\u0139\u0140\7g\2\2"+
		"\u013a\u013b\7h\2\2\u013b\u013c\7c\2\2\u013c\u013d\7n\2\2\u013d\u013e"+
		"\7u\2\2\u013e\u0140\7g\2\2\u013f\u0136\3\2\2\2\u013f\u013a\3\2\2\2\u0140"+
		"T\3\2\2\2\u0141\u0142\7=\2\2\u0142V\3\2\2\2\u0143\u0147\5e\63\2\u0144"+
		"\u0146\5g\64\2\u0145\u0144\3\2\2\2\u0146\u0149\3\2\2\2\u0147\u0145\3\2"+
		"\2\2\u0147\u0148\3\2\2\2\u0148X\3\2\2\2\u0149\u0147\3\2\2\2\u014a\u014c"+
		"\t\2\2\2\u014b\u014a\3\2\2\2\u014c\u014d\3\2\2\2\u014d\u014b\3\2\2\2\u014d"+
		"\u014e\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u0150\b-\2\2\u0150Z\3\2\2\2\u0151"+
		"\u0152\7\61\2\2\u0152\u0153\7,\2\2\u0153\u0157\3\2\2\2\u0154\u0156\13"+
		"\2\2\2\u0155\u0154\3\2\2\2\u0156\u0159\3\2\2\2\u0157\u0158\3\2\2\2\u0157"+
		"\u0155\3\2\2\2\u0158\u015a\3\2\2\2\u0159\u0157\3\2\2\2\u015a\u015b\7,"+
		"\2\2\u015b\u015c\7\61\2\2\u015c\u015d\3\2\2\2\u015d\u015e\b.\2\2\u015e"+
		"\\\3\2\2\2\u015f\u0160\7\61\2\2\u0160\u0161\7\61\2\2\u0161\u0165\3\2\2"+
		"\2\u0162\u0164\13\2\2\2\u0163\u0162\3\2\2\2\u0164\u0167\3\2\2\2\u0165"+
		"\u0166\3\2\2\2\u0165\u0163\3\2\2\2\u0166\u0168\3\2\2\2\u0167\u0165\3\2"+
		"\2\2\u0168\u0169\7\f\2\2\u0169\u016a\3\2\2\2\u016a\u016b\b/\2\2\u016b"+
		"^\3\2\2\2\u016c\u0171\7$\2\2\u016d\u0170\5}?\2\u016e\u0170\n\3\2\2\u016f"+
		"\u016d\3\2\2\2\u016f\u016e\3\2\2\2\u0170\u0173\3\2\2\2\u0171\u016f\3\2"+
		"\2\2\u0171\u0172\3\2\2\2\u0172\u0174\3\2\2\2\u0173\u0171\3\2\2\2\u0174"+
		"\u0175\7$\2\2\u0175`\3\2\2\2\u0176\u0179\7)\2\2\u0177\u017a\5}?\2\u0178"+
		"\u017a\n\4\2\2\u0179\u0177\3\2\2\2\u0179\u0178\3\2\2\2\u017a\u017b\3\2"+
		"\2\2\u017b\u017c\7)\2\2\u017cb\3\2\2\2\u017d\u017e\5i\65\2\u017ed\3\2"+
		"\2\2\u017f\u0180\t\5\2\2\u0180f\3\2\2\2\u0181\u0182\t\6\2\2\u0182h\3\2"+
		"\2\2\u0183\u0185\5m\67\2\u0184\u0186\5k\66\2\u0185\u0184\3\2\2\2\u0185"+
		"\u0186\3\2\2\2\u0186j\3\2\2\2\u0187\u0188\t\7\2\2\u0188l\3\2\2\2\u0189"+
		"\u0194\7\62\2\2\u018a\u0191\5s:\2\u018b\u018d\5o8\2\u018c\u018b\3\2\2"+
		"\2\u018c\u018d\3\2\2\2\u018d\u0192\3\2\2\2\u018e\u018f\5y=\2\u018f\u0190"+
		"\5o8\2\u0190\u0192\3\2\2\2\u0191\u018c\3\2\2\2\u0191\u018e\3\2\2\2\u0192"+
		"\u0194\3\2\2\2\u0193\u0189\3\2\2\2\u0193\u018a\3\2\2\2\u0194n\3\2\2\2"+
		"\u0195\u019a\5q9\2\u0196\u0198\5u;\2\u0197\u0196\3\2\2\2\u0197\u0198\3"+
		"\2\2\2\u0198\u0199\3\2\2\2\u0199\u019b\5q9\2\u019a\u0197\3\2\2\2\u019a"+
		"\u019b\3\2\2\2\u019bp\3\2\2\2\u019c\u019f\7\62\2\2\u019d\u019f\5s:\2\u019e"+
		"\u019c\3\2\2\2\u019e\u019d\3\2\2\2\u019fr\3\2\2\2\u01a0\u01a1\t\b\2\2"+
		"\u01a1t\3\2\2\2\u01a2\u01a4\5w<\2\u01a3\u01a2\3\2\2\2\u01a4\u01a5\3\2"+
		"\2\2\u01a5\u01a3\3\2\2\2\u01a5\u01a6\3\2\2\2\u01a6v\3\2\2\2\u01a7\u01aa"+
		"\5q9\2\u01a8\u01aa\7a\2\2\u01a9\u01a7\3\2\2\2\u01a9\u01a8\3\2\2\2\u01aa"+
		"x\3\2\2\2\u01ab\u01ad\7a\2\2\u01ac\u01ab\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ae"+
		"\u01ac\3\2\2\2\u01ae\u01af\3\2\2\2\u01afz\3\2\2\2\u01b0\u01b1\t\t\2\2"+
		"\u01b1|\3\2\2\2\u01b2\u01b3\7^\2\2\u01b3\u01b7\t\n\2\2\u01b4\u01b7\5\u0081"+
		"A\2\u01b5\u01b7\5\177@\2\u01b6\u01b2\3\2\2\2\u01b6\u01b4\3\2\2\2\u01b6"+
		"\u01b5\3\2\2\2\u01b7~\3\2\2\2\u01b8\u01b9\7^\2\2\u01b9\u01ba\4\62\65\2"+
		"\u01ba\u01bb\4\629\2\u01bb\u01c2\4\629\2\u01bc\u01bd\7^\2\2\u01bd\u01be"+
		"\4\629\2\u01be\u01c2\4\629\2\u01bf\u01c0\7^\2\2\u01c0\u01c2\4\629\2\u01c1"+
		"\u01b8\3\2\2\2\u01c1\u01bc\3\2\2\2\u01c1\u01bf\3\2\2\2\u01c2\u0080\3\2"+
		"\2\2\u01c3\u01c4\7^\2\2\u01c4\u01c5\7w\2\2\u01c5\u01c6\5{>\2\u01c6\u01c7"+
		"\5{>\2\u01c7\u01c8\5{>\2\u01c8\u01c9\5{>\2\u01c9\u0082\3\2\2\2\27\2\u013f"+
		"\u0147\u014d\u0157\u0165\u016f\u0171\u0179\u0185\u018c\u0191\u0193\u0197"+
		"\u019a\u019e\u01a5\u01a9\u01ae\u01b6\u01c1\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}